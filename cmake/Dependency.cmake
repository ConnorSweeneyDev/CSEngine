include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/Manage.cmake")
set(SDL_VERSION "3.2.16")
set(CSRESOURCE_VERSION "0.0.0")
set(GLM_VERSION "1.0.1")

CPMAddPackage(
  URI
  "gh:libsdl-org/SDL#release-${SDL_VERSION}"
  NAME "sdl"
  OPTIONS "SDL_INSTALL OFF" "SDL_UNINSTALL OFF" "SDL_INSTALL_TESTS OFF" "SDL_TESTS OFF"
)
list(APPEND SYSTEM_INCLUDE_DIRECTORIES "${sdl_SOURCE_DIR}/include")
list(APPEND LIBRARIES "SDL3-static")

CPMAddPackage(URI "gh:ConnorSweeneyDev/CSResource#v${CSRESOURCE_VERSION}" NAME "csresource")
set(SHADER_SOURCE_DIRECTORY "resource/shader")
file(
  GLOB_RECURSE SHADER_SOURCE_FILES
  "${CMAKE_CURRENT_SOURCE_DIR}/${SHADER_SOURCE_DIRECTORY}/*.vert"
  "${CMAKE_CURRENT_SOURCE_DIR}/${SHADER_SOURCE_DIRECTORY}/*.frag"
)
set(SHADER_COMPILED_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/Shaders")
set(RESOURCE_HPP_FILE "${CMAKE_CURRENT_SOURCE_DIR}/${PROGRAM_INCLUDE_DIRECTORY}/resource.hpp")
set(RESOURCE_CPP_FILE "${CMAKE_CURRENT_SOURCE_DIR}/${PROGRAM_SOURCE_DIRECTORY}/resource.cpp")
add_custom_command(
  OUTPUT "${RESOURCE_HPP_FILE}" "${RESOURCE_CPP_FILE}"
  COMMAND
    "CSResource" ${SHADER_SOURCE_FILES} ${SHADER_COMPILED_DIRECTORY} ${PROGRAM_INCLUDE_DIRECTORY}
    ${PROGRAM_SOURCE_DIRECTORY}
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  DEPENDS ${SHADER_SOURCE_FILES}
)
add_custom_target("generate_resources" DEPENDS "${RESOURCE_HPP_FILE}" "${RESOURCE_CPP_FILE}")
add_dependencies("generate_resources" "CSResource")
list(APPEND DEPENDENCIES "generate_resources")
if(NOT "${RESOURCE_CPP_FILE}" IN_LIST SOURCE_FILES)
  list(APPEND SOURCE_FILES "${RESOURCE_CPP_FILE}")
endif()

CPMAddPackage(URI "gh:g-truc/glm#${GLM_VERSION}" NAME "glm" OPTIONS "BUILD_SHARED_LIBS OFF" "GLM_BUILD_TESTS OFF")
list(APPEND SYSTEM_INCLUDE_DIRECTORIES "${glm_SOURCE_DIR}")
list(APPEND LIBRARIES "glm::glm")
